"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[945],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(n),f=o,m=p["".concat(s,".").concat(f)]||p[f]||l[f]||a;return n?r.createElement(m,c(c({ref:t},d),{},{components:n})):r.createElement(m,c({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1656:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),c=["components"],i={id:"examples",title:"Smart Contract examples"},s=void 0,u={unversionedId:"build/smart-contracts/examples",id:"build/smart-contracts/examples",title:"Smart Contract examples",description:"Recurrent transfer",source:"@site/docs/build/smart-contracts/examples.md",sourceDirName:"build/smart-contracts",slug:"/build/smart-contracts/examples",permalink:"/archethic-docs/build/smart-contracts/examples",tags:[],version:"current",lastUpdatedAt:1643897567,formattedLastUpdatedAt:"2/3/2022",frontMatter:{id:"examples",title:"Smart Contract examples"},sidebar:"docs",previous:{title:"Smart Contract Language",permalink:"/archethic-docs/build/smart-contracts/language"},next:{title:"Javascript SDK",permalink:"/archethic-docs/build/sdk/js"}},d=[{value:"Recurrent transfer",id:"recurrent-transfer",children:[],level:2},{value:"ICO / Crowdfunding",id:"ico--crowdfunding",children:[],level:2}],l={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"recurrent-transfer"},"Recurrent transfer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'# Send 1.0 each to the given address each month\n\ncondition inherit: [\n  type: transfer,\n  uco_transfers: [\n     %{ to: "0D574D171A484F8DEAC2D61FC3F7CC984BEB52465D69B3B5F670090742CBF5CC", amount: 100000000 }\n  ]\n]\n\nactions triggered_by: interval, at: "0 0 1 * *" do\n  set_type transfer\n  add_uco_transfer to: "0D574D171A484F8DEAC2D61FC3F7CC984BEB52465D69B3B5F670090742CBF5CC", amount: 100000000\nend\n')),(0,a.kt)("h2",{id:"ico--crowdfunding"},"ICO / Crowdfunding"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\n# Ensure the next transaction will be a transfer\ncondition inherit: [\n  type: transfer,\n  nft_transfers: size() == 1\n  # TODO: to provide more security, we should check the destination address is within the previous transaction inputs \n]\n\n# Define conditions to accept incoming transactions\ncondition transaction: [\n  type: transfer, \n  uco_transfers: size() > 0\n] \n\nactions triggered_by: transaction do\n  # Get the amount of uco send to this contract\n  amount_send = transaction.uco_transfers[contract.address]\n\n  if amount_send > 0 do\n      # Convert UCO to the number of tokens to credit. Each UCO worth 10000 token\n      token_to_credit = amount_send * 10000 \n\n      # Send the new transaction\n      set_type transfer\n      add_nft_transfer to: transaction.address, nft: contract.address, amount: token_to_credit\n  end \nend\n")))}p.isMDXComponent=!0}}]);