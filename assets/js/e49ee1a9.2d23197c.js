"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6509],{6331:(e,a,t)=>{t.r(a),t.d(a,{Badge:()=>b,Bullet:()=>u,SpecifiedBy:()=>p,assets:()=>o,contentTitle:()=>c,default:()=>k,frontMatter:()=>d,metadata:()=>r,toc:()=>i});var l=t(7462),n=t(7294),s=t(3905);t(1839);const d={id:"balance",title:"balance",hide_table_of_contents:!1},c=void 0,r={unversionedId:"build/api/schema/queries/balance",id:"build/api/schema/queries/balance",title:"balance",description:"Query the network to find a balance from an address",source:"@site/docs/build/api/schema/queries/balance.mdx",sourceDirName:"build/api/schema/queries",slug:"/build/api/schema/queries/balance",permalink:"/archethic-docs/build/api/schema/queries/balance",draft:!1,tags:[],version:"current",lastUpdatedAt:1669394464,formattedLastUpdatedAt:"Nov 25, 2022",frontMatter:{id:"balance",title:"balance",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"ValidationStamp",permalink:"/archethic-docs/build/api/schema/objects/validation-stamp"},next:{title:"lastTransaction",permalink:"/archethic-docs/build/api/schema/queries/last-transaction"}},o={},i=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>balance.<b>address</b></code><Bullet /><code>Address!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-balancebaddressbcodeaddress--",level:4},{value:"Type",id:"type",level:3},{value:'<code>Balance</code> <Badge class="secondary" text="object"/>',id:"balance-",level:4}],u=()=>(0,s.kt)(n.Fragment,null,(0,s.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,s.kt)(n.Fragment,null,"Specification",(0,s.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),b=e=>(0,s.kt)(n.Fragment,null,(0,s.kt)("span",{class:"badge badge--"+e.class},e.text)),m={toc:i,Bullet:u,SpecifiedBy:p,Badge:b};function k(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,l.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Query the network to find a balance from an address"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},"balance(\n  address: Address!\n): Balance\n")),(0,s.kt)("h3",{id:"arguments"},"Arguments"),(0,s.kt)("h4",{id:"code-style-fontweight-normal-balancebaddressbcodeaddress--"},(0,s.kt)("a",{parentName:"h4",href:"#"},(0,s.kt)("code",{style:{fontWeight:"normal"}},"balance.",(0,s.kt)("b",null,"address"))),(0,s.kt)(u,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"h4",href:"/build/api/schema/scalars/address"},(0,s.kt)("inlineCode",{parentName:"a"},"Address!"))," ",(0,s.kt)(b,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,s.kt)(b,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,s.kt)("blockquote",null),(0,s.kt)("h3",{id:"type"},"Type"),(0,s.kt)("h4",{id:"balance-"},(0,s.kt)("a",{parentName:"h4",href:"/build/api/schema/objects/balance"},(0,s.kt)("inlineCode",{parentName:"a"},"Balance"))," ",(0,s.kt)(b,{class:"secondary",text:"object",mdxType:"Badge"})),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"[Balance]"," represents a ledger balance.\nIt includes:"),(0,s.kt)("ul",{parentName:"blockquote"},(0,s.kt)("li",{parentName:"ul"},"UCO: uco balance"),(0,s.kt)("li",{parentName:"ul"},"token: token balances"))),(0,s.kt)("blockquote",null))}k.isMDXComponent=!0}}]);