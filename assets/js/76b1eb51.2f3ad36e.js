"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5258],{8942:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>h,SpecifiedBy:()=>p,assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>n});var s=a(7462),o=a(7294),i=a(3905);a(1839);const l={id:"ownership",title:"Ownership",hide_table_of_contents:!1},r=void 0,c={unversionedId:"build/api/schema/objects/ownership",id:"build/api/schema/objects/ownership",title:"Ownership",description:"[Ownership] represents a block to set a secret and the authorized public keys able to decrypt the secret",source:"@site/docs/build/api/schema/objects/ownership.mdx",sourceDirName:"build/api/schema/objects",slug:"/build/api/schema/objects/ownership",permalink:"/archethic-docs/build/api/schema/objects/ownership",draft:!1,tags:[],version:"current",lastUpdatedAt:1665513042,formattedLastUpdatedAt:"Oct 11, 2022",frontMatter:{id:"ownership",title:"Ownership",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"OracleServices",permalink:"/archethic-docs/build/api/schema/objects/oracle-services"},next:{title:"SharedSecrets",permalink:"/archethic-docs/build/api/schema/objects/shared-secrets"}},d={},n=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>Ownership.<b>authorizedPublicKeys</b></code><Bullet /><code>[AuthorizedKey]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-ownershipbauthorizedpublickeysbcodeauthorizedkey--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Ownership.<b>secret</b></code><Bullet /><code>Hex</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-ownershipbsecretbcodehex-",level:4},{value:"Member of",id:"member-of",level:3}],h=()=>(0,i.kt)(o.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,i.kt)(o.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,i.kt)(o.Fragment,null,(0,i.kt)("span",{class:"badge badge--"+e.class},e.text)),b={toc:n,Bullet:h,SpecifiedBy:p,Badge:u};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,s.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"[Ownership]"," represents a block to set a secret and the authorized public keys able to decrypt the secret"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type Ownership {\n  authorizedPublicKeys: [AuthorizedKey]\n  secret: Hex\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-ownershipbauthorizedpublickeysbcodeauthorizedkey--"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"Ownership.",(0,i.kt)("b",null,"authorizedPublicKeys"))),(0,i.kt)(h,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/build/api/schema/objects/authorized-key"},(0,i.kt)("inlineCode",{parentName:"a"},"[AuthorizedKey]"))," ",(0,i.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,i.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-ownershipbsecretbcodehex-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"Ownership.",(0,i.kt)("b",null,"secret"))),(0,i.kt)(h,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/build/api/schema/scalars/hex"},(0,i.kt)("inlineCode",{parentName:"a"},"Hex"))," ",(0,i.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"member-of"},"Member of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/build/api/schema/objects/data"},(0,i.kt)("inlineCode",{parentName:"a"},"Data")),"  ",(0,i.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})))}m.isMDXComponent=!0}}]);