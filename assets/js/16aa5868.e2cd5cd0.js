"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3559],{2209:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>p,Bullet:()=>u,SpecifiedBy:()=>h,assets:()=>n,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var s=a(7462),r=a(7294),c=a(3905);a(1839);const l={id:"shared-secrets",title:"SharedSecrets",hide_table_of_contents:!1},d=void 0,i={unversionedId:"build/api/schema/objects/shared-secrets",id:"build/api/schema/objects/shared-secrets",title:"SharedSecrets",description:"[SharedSecrets] represents the public shared secret information",source:"@site/docs/build/api/schema/objects/shared-secrets.mdx",sourceDirName:"build/api/schema/objects",slug:"/build/api/schema/objects/shared-secrets",permalink:"/archethic-docs/build/api/schema/objects/shared-secrets",draft:!1,tags:[],version:"current",lastUpdatedAt:1669394464,formattedLastUpdatedAt:"Nov 25, 2022",frontMatter:{id:"shared-secrets",title:"SharedSecrets",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Ownership",permalink:"/archethic-docs/build/api/schema/objects/ownership"},next:{title:"TokenBalance",permalink:"/archethic-docs/build/api/schema/objects/token-balance"}},n={},o=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>SharedSecrets.<b>storageNoncePublicKey</b></code><Bullet /><code>PublicKey</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-sharedsecretsbstoragenoncepublickeybcodepublickey-",level:4},{value:"Returned by",id:"returned-by",level:3}],u=()=>(0,c.kt)(r.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),h=e=>(0,c.kt)(r.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,c.kt)(r.Fragment,null,(0,c.kt)("span",{class:"badge badge--"+e.class},e.text)),b={toc:o,Bullet:u,SpecifiedBy:h,Badge:p};function m(e){let{components:t,...a}=e;return(0,c.kt)("wrapper",(0,s.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"[SharedSecrets]"," represents the public shared secret information\nIt includes:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"The storage nonce public key: Public Key to encrypt data for the node, so they will be able to decrypt it (mostly for smart contract authorized key)")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"type SharedSecrets {\n  storageNoncePublicKey: PublicKey\n}\n")),(0,c.kt)("h3",{id:"fields"},"Fields"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-sharedsecretsbstoragenoncepublickeybcodepublickey-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"SharedSecrets.",(0,c.kt)("b",null,"storageNoncePublicKey"))),(0,c.kt)(u,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/build/api/schema/scalars/public-key"},(0,c.kt)("inlineCode",{parentName:"a"},"PublicKey"))," ",(0,c.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h3",{id:"returned-by"},"Returned by"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/build/api/schema/queries/shared-secrets"},(0,c.kt)("inlineCode",{parentName:"a"},"sharedSecrets")),"  ",(0,c.kt)(p,{class:"secondary",text:"query",mdxType:"Badge"})))}m.isMDXComponent=!0}}]);